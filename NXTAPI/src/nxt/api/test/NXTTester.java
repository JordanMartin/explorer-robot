/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package nxt.api.test;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author Jordan
 */
public class NXTTester extends javax.swing.JFrame implements ActionListener {
    
    APIV2Tester api;
    
        /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        NXTTester tester = new NXTTester();
    }
    
    /**
     * Creates new form CommandTester
     */
    public NXTTester() {
        initComponents();
        this.setVisible(true);
        
        setLocationRelativeTo(null);
        
        connecterbt.addActionListener(this);
        connecterusb.addActionListener(this);
        deconnecter.addActionListener(this);
        avancer.addActionListener(this);
        reculer.addActionListener(this);
        gauche.addActionListener(this);
        droite.addActionListener(this);
        stop.addActionListener(this);
        
        boussole.addActionListener(this);
        sonardevant.addActionListener(this);
        sonardroit.addActionListener(this);
        sonargauche.addActionListener(this);
        allsensors.addActionListener(this);
        activeCompass.addActionListener(this);
        turnToDegree.addActionListener(this);
        
        api = new APIV2Tester();
        api.connect();
    }
    
    private void log(String str){
        console.append("\n receive : " + str);
    }
    
    @Override
    public void actionPerformed(ActionEvent a){
        
        if(a.getSource() == connecterusb){            
            api.connect();
        }        
        else if(a.getSource() == connecterbt){
            api.connect();
        }
        
        else if(a.getSource() == deconnecter){
            api.disconnect();
        }
        
        else if(a.getSource() == avancer){
            api.straightForward();
        }
        
        else if(a.getSource() == reculer){
        }
        
        else if(a.getSource() == stop){
            api.stopMotors();
        }
        
        else if(a.getSource() == droite){
            api.turnRight();
        }
        
        else if(a.getSource() == gauche){
            api.turnLeft();
        }
        
        else if(a.getSource() == boussole){
            log("compass : " + api.nxt.compass.getDegree());
        }
        
        else if(a.getSource() == sonardevant){
            log("front : " + api.nxt.frontSonar.getDistance());
        }
        
        else if(a.getSource() == sonardroit){
            log("right : " + api.nxt.rightSonar.getDistance());
        }
        
        else if(a.getSource() == sonargauche){
            log("left : " + api.nxt.leftSonar.getDistance());
        }
        
        else if(a.getSource() == allsensors){
            
        } else if(a.getSource() == activeCompass){
            
            new Thread() {
                @Override
                public void run() {
                    while (true) {
                        compassValue.setText(api.nxt.compass.getDegree() + "°");
                        try {
                            sleep(500);
                        } catch (InterruptedException ex) {
                        }
                    }
                }                
            }.start();
            
            
        } else if(a.getSource() == turnToDegree){
            api.turnToCompassDegree((int) degreeToTurn.getValue());
        }
        
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        avancer = new javax.swing.JButton();
        reculer = new javax.swing.JButton();
        droite = new javax.swing.JButton();
        gauche = new javax.swing.JButton();
        connecterusb = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        deconnecter = new javax.swing.JButton();
        connecterbt = new javax.swing.JButton();
        speed = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        sonardevant = new javax.swing.JButton();
        sonardroit = new javax.swing.JButton();
        sonargauche = new javax.swing.JButton();
        boussole = new javax.swing.JButton();
        allsensors = new javax.swing.JButton();
        turnToDegree = new javax.swing.JButton();
        degreeToTurn = new javax.swing.JSpinner();
        compassValue = new javax.swing.JLabel();
        activeCompass = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NXT Controller");

        avancer.setText("Avancer");

        reculer.setText("Reculer");

        droite.setText("Droite");
        droite.setPreferredSize(new java.awt.Dimension(60, 15));

        gauche.setText("Gauche");

        connecterusb.setText("Connecter USB");

        stop.setText("Stop");

        deconnecter.setText("Deconnecter");

        connecterbt.setText("Connecter BT");

        speed.setMaximum(1000);
        speed.setValue(100);

        console.setColumns(20);
        console.setRows(5);
        jScrollPane1.setViewportView(console);

        sonardevant.setText("Sonar devant");

        sonardroit.setText("Sonar Droit");

        sonargauche.setText("Sonar Gauche");

        boussole.setText("Boussole");

        allsensors.setText("Tous les capteurs");

        turnToDegree.setText("Tourner vers ce degrée");
        turnToDegree.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                turnToDegreeActionPerformed(evt);
            }
        });

        degreeToTurn.setValue(180);

        compassValue.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        compassValue.setText("°");

        activeCompass.setText("Activer boussole");
        activeCompass.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                activeCompassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(gauche, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(stop, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(avancer, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(reculer, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(droite, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(connecterbt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(connecterusb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deconnecter))
                            .addComponent(speed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(sonargauche)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sonardroit, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(sonardevant)
                                        .addGap(53, 53, 53))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(boussole, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(54, 54, 54)))
                                .addGap(23, 23, 23))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(allsensors, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(degreeToTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(turnToDegree)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(activeCompass))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(compassValue, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connecterusb)
                    .addComponent(connecterbt)
                    .addComponent(deconnecter))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(avancer, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stop, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reculer, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(droite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(gauche, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(speed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(sonardevant, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sonardroit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sonargauche, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(boussole, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(allsensors, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(turnToDegree, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(degreeToTurn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(compassValue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(activeCompass)
                        .addGap(49, 49, 49)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void turnToDegreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnToDegreeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_turnToDegreeActionPerformed

    private void activeCompassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activeCompassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activeCompassActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton activeCompass;
    private javax.swing.JButton allsensors;
    private javax.swing.JButton avancer;
    private javax.swing.JButton boussole;
    private javax.swing.JLabel compassValue;
    private javax.swing.JButton connecterbt;
    private javax.swing.JButton connecterusb;
    private javax.swing.JTextArea console;
    private javax.swing.JButton deconnecter;
    private javax.swing.JSpinner degreeToTurn;
    private javax.swing.JButton droite;
    private javax.swing.JButton gauche;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reculer;
    private javax.swing.JButton sonardevant;
    private javax.swing.JButton sonardroit;
    private javax.swing.JButton sonargauche;
    private javax.swing.JSlider speed;
    private javax.swing.JButton stop;
    private javax.swing.JButton turnToDegree;
    // End of variables declaration//GEN-END:variables
}
